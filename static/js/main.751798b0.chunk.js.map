{"version":3,"sources":["components/TrainRecordForm.js","components/TrainRecordItem.js","components/TrainRecordHistory.js","components/TrainRecord.js","App.js","reportWebVitals.js","index.js"],"names":["TrainRecordForm","form","onSubmit","onChange","className","name","value","date","dist","TrainRecordItem","item","onEdit","onDelete","toLocaleDateString","toFixed","onClick","id","TrainRecordHistory","trains","sort","a","b","getTime","map","TrainRecord","clearForm","edit","useState","setForm","setTrains","event","preventDefault","formatDate","split","Date","hasRecord","findIndex","Number","prev","nanoid","target","prevForm","record","find","filter","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.751798b0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function TrainRecordForm({ form, onSubmit, onChange }) {\n  return (\n    <form className=\"TrainRecordForm\" onSubmit={onSubmit}>\n      <label>Дата (ДД.ММ.ГГГГ)\n        <input className=\"TrainRecordForm__date\" name=\"date\" value={form.date} onChange={onChange} />\n      </label>\n      <label>Пройдено км\n        <input className=\"TrainRecordForm__dist\" name=\"dist\" value={form.dist} onChange={onChange} />\n      </label>\n      <button className=\"TrainRecordForm__button\">OK</button>\n    </form>\n  );\n}\n\nTrainRecordForm.defaultProps = {\n  form: { date: '', dist: '', edit: false }\n};\n\nTrainRecordForm.propTypes = {\n  form: PropTypes.exact({\n    date: PropTypes.string,\n    dist: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    edit: PropTypes.bool,\n  }).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\n\nexport default function TrainRecordItem({ item, onEdit, onDelete }) {\n  return (\n    <li className=\"TrainRecord__item\">\n      <div>{item.date.toLocaleDateString()}</div>\n      <div>{+item.dist.toFixed(2)}</div>\n      <div>\n        <i className=\"material-icons\" onClick={onEdit(item.id)}>edit</i>\n        <i className=\"material-icons\" onClick={onDelete(item.id)}>delete</i>\n      </div>\n    </li>\n  );\n}\n\nTrainRecordItem.propTypes = {\n  item: PropTypes.exact({\n    id: PropTypes.string,\n    date: PropTypes.instanceOf(Date),\n    dist: PropTypes.number,\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport TrainRecordItem from \"./TrainRecordItem\";\n\nexport default function TrainRecordHistory({ trains, onEdit, onDelete }) {\n\n  trains.sort((a, b) => b.date.getTime() - a.date.getTime());\n\n  return (\n    <div className=\"TrainRecord__history\">\n      <header className=\"TrainRecord__header\">\n        <div>Дата (ДД.ММ.ГГГГ)</div>\n        <div>Пройдено км</div>\n        <div>Действия</div>\n      </header>\n      <ul className=\"TrainRecord__table\">\n        {trains.map((item =>\n          <TrainRecordItem key={item.id} item={item} onEdit={onEdit} onDelete={onDelete} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTrainRecordHistory.defaultProps = {\n  trains: [],\n};\n\nTrainRecordHistory.propTypes = {\n  trains: PropTypes.arrayOf(PropTypes.object),\n  onEdit: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport TrainRecordForm from './TrainRecordForm';\nimport TrainRecordHistory from './TrainRecordHistory';\n\nexport default function TrainRecord() {\n  const clearForm = { date: '', dist: '', edit: false };\n  const [form, setForm] = useState(clearForm);\n  const [trains, setTrains] = useState([]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (form.date === '' || form.dist === '') {\n      return;\n    }\n\n    const formatDate = form.date.split('.');\n    const date = new Date(formatDate[2], formatDate[1] - 1, formatDate[0]);\n\n    const hasRecord = trains.findIndex((item) => item.date.getTime() === date.getTime());\n    if (hasRecord !== -1) {\n      if (form.edit) {\n        trains[hasRecord].dist = Number(form.dist);\n      } else {\n        trains[hasRecord].dist += Number(form.dist);\n      }\n    } else {\n      setTrains(prev => [...prev, { id: nanoid(), date, dist: Number(form.dist) }]);\n    }\n    setForm(clearForm);\n  }\n\n  const handleChange = ({ target }) => {\n    setForm(prevForm => ({ ...prevForm, [target.name]: target.value }));\n  }\n\n  const handleDelete = (id) => {\n    return () => {\n      setTrains(prev => trains.filter((item) => item.id !== id));\n    }\n  }\n\n  const handleEdit = (id) => {\n    return () => {\n      const record = trains.find((item) => item.id === id);\n      setForm({ date: record.date.toLocaleDateString(), dist: record.dist, edit: true });\n    }\n  }\n\n  return (\n    <div className=\"TrainRecord\">\n      <TrainRecordForm form={form} onSubmit={handleSubmit} onChange={handleChange} />\n      <TrainRecordHistory trains={trains} onEdit={handleEdit} onDelete={handleDelete} />\n    </div>\n  );\n}","import './App.css';\nimport TrainRecord from './components/TrainRecord';\n\nfunction App() {\n  return (\n    <TrainRecord />\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}